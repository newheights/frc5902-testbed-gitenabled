// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5902.robot.subsystems;
import org.usfirst.frc5902.robot.RobotMap;
import org.usfirst.frc5902.robot.commands.*;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class sensorBase extends Subsystem { 
	
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
	Encoder enc1;
	Encoder enc2;
	Encoder enc3;
	Encoder enc4;
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	enc1 = makeEncoder(0, 1);
    	enc2 = makeEncoder(2, 3);
    	enc3 = makeEncoder(4, 5);
    	enc4 = makeEncoder(6, 7);
    }
    public Encoder makeEncoder(int digit1, int digit2) {
    	Encoder sampleEncoder = new Encoder(digit1, digit2, false, Encoder.EncodingType.k4X);
    	sampleEncoder.setMaxPeriod(.1);
    	sampleEncoder.setMinRate(10);
    	sampleEncoder.setDistancePerPulse(5);
    	sampleEncoder.setReverseDirection(true);
    	sampleEncoder.setSamplesToAverage(7);
		return sampleEncoder;
    }
    public void resetAllEncoders() {
    	enc1.reset();
    	enc2.reset();
    	enc3.reset();
    	enc4.reset();
    }
}
